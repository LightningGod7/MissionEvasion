#pragma once
// global.h
#ifndef GLOBAL_H
#define GLOBAL_H

#include <windows.h>
#include <memory>
#include "PE.h" 

extern bool is64Bit;

//Declarations
NewPEInfo StorePEInMemory(const char* const strSrcPath);
std::string getArch(const NewPEInfo& peInfo);
SIZE_T GetImageSize(const NewPEInfo& peInfo);
DWORD get_sec_protection(DWORD sectionCharacteristics);
PROCESS_INFORMATION GetDestProcessInfo(LPCSTR strDestPath);
PEB GetPEBExternal(HANDLE hProc);

/**
 * Writes the source PE image into the target process and patches relocations.
 * @returns Modified PROCESS_INFORMATION structure for the destination process.
 */
PROCESS_INFORMATION OverwriteProcess(
    NewPEInfo& srcPEInfo,
    PROCESS_INFORMATION destProcessInfo,
    PVOID& destImageBase,
    SIZE_T DestImageSize);

/**
 * Sets the destination process's entry point to the payload and resumes execution.
 */
void ResumeDestProcess(
    const NewPEInfo& srcPEInfo,
    const PROCESS_INFORMATION& destProcessInfo,
    PVOID destImageBase);

#endif // GLOBAL_H